<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:hadoop="http://www.springframework.org/schema/hadoop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/hadoop 
		http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<description>
		PYMK -- Same Company
	</description>
	
	
	<bean id="hdfs_o_same_company" class="com.tianji.r.core.conf.model.HdfsPathNew">
		<property name="loadWay" value="OVERRIDE" />
		<property name="dbTable" ref="table_o_same_company"/>
		<property name="path" value="o_same_company"/>
		<property name="hdfsSource" ref="rHdfsSource" />
	</bean>
	
	<bean id="hive_o_same_company" class="com.tianji.r.core.conf.model.HiveTableNew">
		<property name="hdfsPath" ref="hdfs_o_same_company"/>
		<property name="loadWay" value="OVERRIDE" />
		<property name="from" value="HDFS" />
		<property name="hiveTemplate" ref="rHiveTemplate" />
		<property name="createHQLs">
			<value>
				<![CDATA[
				CREATE EXTERNAL TABLE r_same_company(a int,b int)
				ROW FORMAT DELIMITED 
				FIELDS TERMINATED BY ','
				location '/user/hdfs/o_same_company/result'
				]]>
			</value>
		</property>
		<property name="dropHQLs">
			<value>
				<![CDATA[
				DROP TABLE IF EXISTS r_same_company
				]]>
			</value>
		</property> 
	</bean>
	
	<bean id="sameCompany_importIntoHdfsTask" class="com.tianji.r.core.job.task.HdfsImportTask">
		<property name="hdfsNewList">
			<list>
				<ref bean="hdfs_o_same_company"/>
			</list>
		</property>
	</bean>
	
	<bean id="sameCompany_MapRedAlgorithmConf" class="com.tianji.r.core.conf.MapRedAlgorithmConf">
		<property name="hdfsPath" ref="hdfs_o_same_company"/>
		<property name="mapReduceClass" value="com.tianji.r.core.algorithm.pymk.SameCompanyMRAlgorithm"/>
		<property name="mapperClass" value="com.tianji.r.core.algorithm.pymk.SameCompanyMRAlgorithm$SameCompanyMapper"/>
		<property name="reducerClass" value="com.tianji.r.core.algorithm.pymk.SameCompanyMRAlgorithm$SameCompanyReducer"/>
		<property name="outputKeyClass" value="org.apache.hadoop.io.Text"/>
		<property name="outputValueClass" value="org.apache.hadoop.io.IntWritable"/>
	</bean>

 	<bean id="sameCompany_MapRedAlgorithmTask" class="com.tianji.r.core.job.task.MapRedAlgorithmTask">
		<property name="jobConf" ref="sameCompany_MapRedAlgorithmConf" />
	</bean>
	
	<bean id="sameCompany_HiveImportTask" class="com.tianji.r.core.job.task.HiveImportTask">
		<property name="hiveNewList">
			<list>
				<ref bean="hive_o_same_company"/>
			</list>
		</property>
	</bean>

	<batch:job id="sameCompanyJob">
		<batch:step id="sameCompany_importIntoHdfsStep" next="sameCompany_MapRedAlgorithmStep">
			<batch:tasklet ref="sameCompany_importIntoHdfsTask" />
		</batch:step>
		
		<batch:step id="sameCompany_MapRedAlgorithmStep" next="sameCompany_HiveImportStep">
			<batch:tasklet ref="sameCompany_MapRedAlgorithmTask" />
		</batch:step>
		
		<batch:step id="sameCompany_HiveImportStep">
			<batch:tasklet ref="sameCompany_HiveImportTask" />
		</batch:step>

	</batch:job>
	
	<!-- spring-batch version 	
	<hadoop:job id="sameCompanyMRJob" 
	     input-path="/user/hdfs/o_same_company" 
	     output-path="/user/hdfs/o_same_company/result" 
	     mapper="com.tianji.r.core.algorithm.pymk.SameCompanyMapper"
	     reducer="com.tianji.r.core.algorithm.pymk.SameCompanyReducer"/>
	--> 

</beans>
